//=========================================================================================================
//
// 敵の処理 [enemy.h]
// Author : yabuki yukito
//
//=========================================================================================================

#ifndef _ENEMY_H_
#define _ENEMY_H_

#include "main.h"

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//マクロ定義
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_ENEMY (128)					//敵の最大数

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//敵の状態
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
typedef enum
{
	ENEMYSTATE_NORMAL = 0,
	ENEMYSTATE_DAMEGE,
	ENEMYSTATE_MAX

}ENEMYSTATE;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//敵構造体の定義
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
typedef struct
{
	D3DXVECTOR3 pos;					//位置
	ENEMYSTATE state;					//状態
	int nCounterState;					//状態管理カウンター
	int nType;							//種類
	int nLife;							//体力
	int BulletCounter;					//弾へのカウンター
	int nScore;							//スコア
	bool bUse;							//使用しているかどうか
}Enemy;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//プロトタイプ宣言
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void InitEnemy(void);
void UninitEnemy(void);
void UpdateEnemy(void);
void DrawEnemy(void);
int GetEnemyNum();
void SetEnemy(D3DXVECTOR3 pos, int nType, int nLife);
void HitEnemy(int nCntEnemy, int nDamage);
bool CollisionEnemy(D3DXVECTOR3* pPos, D3DXVECTOR3* pPosOld, D3DXVECTOR3* pMove);
Enemy* GetEnemy(void);

#endif // !_ENEMY_H_
