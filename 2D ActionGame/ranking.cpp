//=========================================================================================================
////
//// ランキングの処理 [ranking.cpp]
//// Author : yabuki yukito
////
//=========================================================================================================
//
//#include"ranking.h"
//
//=========================================================================================================
////メイン関数
//=========================================================================================================
//
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
////ランキングスコアの構造体
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//typedef struct
//{
//	D3DXVECTOR3 pos;														//位置
//	int nScore;																//スコア
//}RankScore;
//
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
////グローバル変数
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//LPDIRECT3DTEXTURE9 g_pTextureRank =NULL;									//テクスチャへのポインタ
//LPDIRECT3DTEXTURE9 g_pTextureRankScore = NULL;							//テクスチャへのポインタ
//LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffRank = NULL;							//頂点バッファへのポインタ
//LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffRankScore = NULL;						//頂点バッファへのポインタ
//RankScore g_aRankScore[MAX_RANK];											//ランキングスコア情報
//int g_nRankUpdate = -1;													//更新ランク№
//int g_nTimerRanking;														//ランキング画面表示タイマー
//
//=========================================================================================================
////ランキングの初期化処理
//=========================================================================================================
//void InitRanking(void)
//{
//	LPDIRECT3DDEVICE9 pDevice;
//	int nCntRank;
//
//	//デバイスの取得
//	pDevice = GetDevice();
//
//}
//
//=========================================================================================================
////ランキングの終了処理
//=========================================================================================================
//void UninitRanking(void)
//{
//	//テクスチャの破棄
//	if (g_pTextureRank != NULL)
//	{
//		g_pTextureRank->Release();
//		g_pTextureRank = NULL;
//	}
//	//頂点バッファの破棄
//	if (g_pVtxBuffRank != NULL)
//	{
//		g_pVtxBuffRank->Release();
//		g_pVtxBuffRank = NULL;
//	}
//}
//
//=========================================================================================================
////ランキングの更新処理
//=========================================================================================================
//void UpdateRanking(void)
//{
//	if (g_nRankUpdate != -1)
//	{
//		//該当スコアランキングの点滅
//
//		//頂点カラーの設定(ランキング)
//	}
//	//if(//一定時間経過||キー入力)
//	//	{
//	//		//タイトル画面に遷移
//	//	}
//}
//
//=========================================================================================================
////ランキングの描画処理
//=========================================================================================================
//void DrawRanking(void)
//{
//	LPDIRECT3DDEVICE9 pDevice{};
//	int nCntRank;
//
//	//デバイスの取得
//	pDevice = GetDevice();
//
//	//頂点バッファをデータストリームに設定
//	pDevice->SetStreamSource(0, g_pVtxBuffRank, 0, sizeof(VERTEX_2D));
//
//	//頂点フォーマットの設定
//	pDevice->SetFVF(FVF_VERTEX_2D);
//
//	////テクスチャの設定
//	//for (nCntRank = 0; nCntRank < MAX_RANK; nCntRank++)
//	//{
//	//	if (g_aRankScore[nCntRank].nScore == true)
//	//	{
//	//		//テクスチャの設定
//	//		pDevice->SetTexture(0, g_pTextureRank);
//
//	//		//弾が使用されている
//	//		//ポリゴンの描画
//	//		pDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP,
//	//			nCntRank * 4,
//	//			2);
//	//	}
//	//}
//}
//
//=========================================================================================================
////ランキングのリセット処理
//=========================================================================================================
//void ResetRanking(void)
//{
//	//ランキングスコア情報の初期設定
//
//}
//
//=========================================================================================================
////ランキングの設定処理
//=========================================================================================================
//void SetRanking(int nScore)
//{
//	int nCntRank;
//	for (nCntRank = 0; nCntRank < MAX_RANK; nCntRank++)
//	{
//		//ランキングスコアの並べ替え
//
//		//指定のスコアがランクインしたら更新
//
//		//テクスチャ座標の設定
//
//	}
//}
//


